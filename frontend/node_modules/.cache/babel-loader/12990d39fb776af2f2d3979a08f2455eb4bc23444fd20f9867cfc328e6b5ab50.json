{"ast":null,"code":"import axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Redirect to login page\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\n\n// Socket.io setup\nexport const socket = io(process.env.REACT_APP_API_URL || 'http://localhost:8000', {\n  path: '/socket.io/',\n  autoConnect: false,\n  transports: ['websocket', 'polling']\n});\n\n// Auth API functions\nexport const auth = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  register: async (username, email, password, full_name) => {\n    const response = await api.post('/auth/register', {\n      username,\n      email,\n      password,\n      full_name\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      socket.disconnect();\n    }\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n};\n\n// Diagrams API functions\nexport const diagrams = {\n  create: async (title, description = '', is_public = false) => {\n    const response = await api.post('/diagrams/', {\n      title,\n      description,\n      is_public,\n      diagram_data: {\n        elements: [],\n        canvas_state: {}\n      },\n      collaborators: []\n    });\n    return response.data;\n  },\n  getAll: async (skip = 0, limit = 10, search = '') => {\n    const params = {\n      skip,\n      limit\n    };\n    if (search) params.search = search;\n    const response = await api.get('/diagrams/', {\n      params\n    });\n    return response.data;\n  },\n  getById: async diagramId => {\n    const response = await api.get(`/diagrams/${diagramId}`);\n    return response.data;\n  },\n  update: async (diagramId, updateData) => {\n    const response = await api.put(`/diagrams/${diagramId}`, updateData);\n    return response.data;\n  },\n  delete: async diagramId => {\n    const response = await api.delete(`/diagrams/${diagramId}`);\n    return response.data;\n  },\n  getPublic: async (skip = 0, limit = 10, search = '') => {\n    const params = {\n      skip,\n      limit\n    };\n    if (search) params.search = search;\n    const response = await api.get('/diagrams/public', {\n      params\n    });\n    return response.data;\n  },\n  addCollaborator: async (diagramId, userEmail) => {\n    const response = await api.post(`/diagrams/${diagramId}/collaborators/${userEmail}`);\n    return response.data;\n  },\n  removeCollaborator: async (diagramId, userEmail) => {\n    const response = await api.delete(`/diagrams/${diagramId}/collaborators/${userEmail}`);\n    return response.data;\n  }\n};\n\n// Chat API functions\nexport const chat = {\n  sendMessage: async (diagramId, message) => {\n    const response = await api.post(`/chat/${diagramId}/messages?message_content=${encodeURIComponent(message)}`);\n    return response.data;\n  },\n  getMessages: async (diagramId, skip = 0, limit = 50) => {\n    const response = await api.get(`/chat/${diagramId}/messages`, {\n      params: {\n        skip,\n        limit\n      }\n    });\n    return response.data;\n  },\n  deleteMessage: async (diagramId, messageId) => {\n    const response = await api.delete(`/chat/${diagramId}/messages/${messageId}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","io","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","socket","path","autoConnect","transports","auth","login","email","password","post","data","access_token","setItem","JSON","stringify","user","register","username","full_name","logout","console","disconnect","getCurrentUser","get","isAuthenticated","getUser","parse","diagrams","title","description","is_public","diagram_data","elements","canvas_state","collaborators","getAll","skip","limit","search","params","getById","diagramId","update","updateData","put","delete","getPublic","addCollaborator","userEmail","removeCollaborator","chat","sendMessage","message","encodeURIComponent","getMessages","deleteMessage","messageId"],"sources":["/workspaces/codespaces-blank/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\nimport { io } from 'socket.io-client';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      // Redirect to login page\n      window.location.href = '/';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Socket.io setup\nexport const socket = io(process.env.REACT_APP_API_URL || 'http://localhost:8000', {\n  path: '/socket.io/',\n  autoConnect: false,\n  transports: ['websocket', 'polling'],\n});\n\n// Auth API functions\nexport const auth = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n\n  register: async (username, email, password, full_name) => {\n    const response = await api.post('/auth/register', {\n      username,\n      email,\n      password,\n      full_name,\n    });\n    if (response.data.access_token) {\n      localStorage.setItem('token', response.data.access_token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      socket.disconnect();\n    }\n  },\n\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n\n  getUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n};\n\n// Diagrams API functions\nexport const diagrams = {\n  create: async (title, description = '', is_public = false) => {\n    const response = await api.post('/diagrams/', {\n      title,\n      description,\n      is_public,\n      diagram_data: { elements: [], canvas_state: {} },\n      collaborators: [],\n    });\n    return response.data;\n  },\n\n  getAll: async (skip = 0, limit = 10, search = '') => {\n    const params = { skip, limit };\n    if (search) params.search = search;\n    const response = await api.get('/diagrams/', { params });\n    return response.data;\n  },\n\n  getById: async (diagramId) => {\n    const response = await api.get(`/diagrams/${diagramId}`);\n    return response.data;\n  },\n\n  update: async (diagramId, updateData) => {\n    const response = await api.put(`/diagrams/${diagramId}`, updateData);\n    return response.data;\n  },\n\n  delete: async (diagramId) => {\n    const response = await api.delete(`/diagrams/${diagramId}`);\n    return response.data;\n  },\n\n  getPublic: async (skip = 0, limit = 10, search = '') => {\n    const params = { skip, limit };\n    if (search) params.search = search;\n    const response = await api.get('/diagrams/public', { params });\n    return response.data;\n  },\n\n  addCollaborator: async (diagramId, userEmail) => {\n    const response = await api.post(`/diagrams/${diagramId}/collaborators/${userEmail}`);\n    return response.data;\n  },\n\n  removeCollaborator: async (diagramId, userEmail) => {\n    const response = await api.delete(`/diagrams/${diagramId}/collaborators/${userEmail}`);\n    return response.data;\n  },\n};\n\n// Chat API functions\nexport const chat = {\n  sendMessage: async (diagramId, message) => {\n    const response = await api.post(`/chat/${diagramId}/messages?message_content=${encodeURIComponent(message)}`);\n    return response.data;\n  },\n\n  getMessages: async (diagramId, skip = 0, limit = 50) => {\n    const response = await api.get(`/chat/${diagramId}/messages`, {\n      params: { skip, limit },\n    });\n    return response.data;\n  },\n\n  deleteMessage: async (diagramId, messageId) => {\n    const response = await api.delete(`/chat/${diagramId}/messages/${messageId}`);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}